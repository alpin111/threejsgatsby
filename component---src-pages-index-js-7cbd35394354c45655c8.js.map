{"version":3,"sources":["webpack:///./src/components/3D/cubeStates.js","webpack:///./src/pages/index.js","webpack:///./node_modules/three-orbitcontrols/OrbitControls.js"],"names":["App","require","props","_this","_Component","call","this","animate","cube","geometry","state","material","color","setHex","side","wireframe","rotation","x","y","renderScene","frameId","window","requestAnimationFrame","start","stop","cancelAnimationFrame","renderer","render","scene","camera","THREE","SetGeometry","setState","SetRotation","float","SetMaterial","SetColor","SetSide","Side","ToggleWireFrame","componentDidUpdate","prevprops","needsupdate","StopRotation","componentDidMount","background","z","mainLight","addEventListener","aspect","innerWidth","innerHeight","updateProjectionMatrix","setSize","position","set","add","antialias","setPixelRatio","devicePixelRatio","gammaFactor","gammaOutput","physicallyCorrectLights","document","body","appendChild","domElement","plane","transparent","opacity","_this2","react_default","a","createElement","Fragment","style","fontSize","padding","onClick","metalness","roughness","depthTest","depthWrite","flatShading","reflectivity","Component","IndexPage","Layout","cubeStates","__webpack_require__","OrbitControls","object","offset","quat","quatInverse","lastPosition","lastQuaternion","undefined","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","dispatchEvent","changeEvent","update","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","panOffset","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","module","exports","default"],"mappings":"8IA+TeA,GA7TOC,EAAQ,iBAO5B,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAsMJC,QAAU,WAENJ,EAAKK,KAAKC,SAAWN,EAAKO,MAAMD,SAEhCN,EAAKK,KAAKG,SAAWR,EAAKO,MAAMC,SAChCR,EAAKK,KAAKG,SAASC,MAAMC,OAAOV,EAAKO,MAAME,OAC3CT,EAAKK,KAAKG,SAASG,KAAOX,EAAKO,MAAMI,KACrCX,EAAKK,KAAKG,SAASI,UAAYZ,EAAKO,MAAMK,UAGxCZ,EAAKK,KAAKQ,SAASC,GAAKd,EAAKO,MAAMM,SACnCb,EAAKK,KAAKQ,SAASE,GAAKf,EAAKO,MAAMM,SAEnCb,EAAKgB,cACLhB,EAAKiB,QAAUC,OAAOC,sBAAsBnB,EAAKI,UArNlCJ,EAyNrBoB,MAAQ,WACSpB,EAAKiB,UACNjB,EAAKiB,QAAUE,sBAAsBnB,EAAKI,WA3NrCJ,EAgOrBqB,KAAO,WACHC,qBAAqBtB,EAAKiB,UAjOTjB,EAqOrBgB,YAAc,WACVhB,EAAKuB,SAASC,OAAOxB,EAAKyB,MAAOzB,EAAK0B,SApOtC1B,EAAKO,MAAQ,CACXM,SAAU,KACVL,SAAU,IAAImB,uBACdrB,SAAU,IAAIqB,cAAmB,EAAG,EAAG,GACvClB,MAAO,SACPE,KAAMgB,aACNf,WAAW,GARIZ,sCAYnB4B,YAAA,SAAYtB,GACVH,KAAK0B,SAAS,CACVvB,SAAUA,OAKhBwB,YAAA,SAAYC,GACV5B,KAAK0B,SAAS,CACZhB,SAAUkB,OAKdC,YAAA,SAAYxB,GACVL,KAAK0B,SAAS,CACZrB,SAAUA,OAIdyB,SAAA,SAASxB,GACPN,KAAK0B,SAAS,CACZpB,MAAOA,OAKXyB,QAAA,SAAQC,GACNhC,KAAK0B,SAAS,CACZlB,KAAMwB,OAKVC,gBAAA,WACEjC,KAAK0B,SAAS,CACZjB,WAAYT,KAAKI,MAAMK,eAK3ByB,mBAAA,SAAmBC,GACbA,EAAUC,cAAgBpC,KAAKJ,MAAMwC,aAAepC,KAAKqC,kBAK/DC,kBAAA,WAQE,SAAShB,IAIP,OAHAA,EAAQ,IAAIE,SACNe,WAAa,IAAIf,QAAa,SAE7BF,EAMT,IAAmBX,EAAEC,EAAE4B,EAGjBjB,EAiEIkB,EAhDJrB,EA4BJL,OAAO2B,iBAAkB,SAV3B,WAEE1C,KAAKuB,OAAOoB,OAAS5B,OAAO6B,WAAa7B,OAAO8B,YAGhD7C,KAAKuB,OAAOuB,yBAGZ9C,KAAKoB,SAAS2B,QAAShC,OAAO6B,WAAY7B,OAAO8B,eA+CnD7C,KAAKsB,MAAQA,IACbtB,KAAKuB,QA9FcZ,EA8FK,EA9FHC,GA8FM,GA9FJ4B,EA8FO,GA3FxBjB,EAAS,IAAIC,oBACf,GACAT,OAAO6B,WAAW7B,OAAO8B,YACzB,GACA,MAEMG,SAASC,IAAKtC,EAAEC,EAAE4B,GAEjBjB,GAoFXvB,KAAKsB,MAAM4B,MA3BDT,EAAY,IAAIjB,mBAAwB,SAAU,IAC9CwB,SAASC,IAAK,GAAI,GAAI,IAEzBR,GAjBY,IAAIjB,kBACrB,SACA,QACA,IA0CNxB,KAAKoB,WA/ECA,EAAW,IAAII,gBAAoB,CAAE2B,WAAW,KAE3CJ,QAAShC,OAAO6B,WAAY7B,OAAO8B,aAG5CzB,EAASgC,cAAerC,OAAOsC,kBAE/BjC,EAASkC,YAAc,IACvBlC,EAASmC,aAAc,EAEvBnC,EAASoC,yBAA0B,EAEnCC,SAASC,KAAKC,YAAavC,EAASwC,YAE7BxC,GAkEM,IAAII,gBAAqBxB,KAAKuB,OAAQvB,KAAKoB,SAASwC,YAInE5D,KAAKE,KAAO,IAAIsB,OAAYxB,KAAKI,MAAMD,SAAUH,KAAKI,MAAMC,UAC5DL,KAAKsB,MAAM4B,IAAKlD,KAAKE,MAErB,IA9BQC,EACAE,EA6BJwD,GA9BI1D,EAAW,IAAIqB,gBAAqB,GAAI,GAAI,GAC5CnB,EAAW,IAAImB,uBACf,CAAClB,MAAO,QACJE,KAAMgB,aACNsC,aAAa,EACbC,QAAS,GACTtD,WAAW,IAEP,IAAIe,OAAYrB,EAAUE,IAuB1CL,KAAKsB,MAAM4B,IAAIW,GACfA,EAAMb,SAASC,IAAI,EAAE,GAAG,GAIxBjD,KAAKiB,WA4CPI,OAAA,WAAS,IAAA2C,EAAAhE,KACP,OACEiE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAGAH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACrB,SAAU,WAAY1C,MAAO,QAASgE,SAAU,OAAQC,QAAS,SAE5EN,EAAAC,EAAAC,cAAA,4CAEFF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKvC,YAAY,IAAID,cAAmB,EAAG,EAAG,MAAtE,QACAyC,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKvC,YAAa,IAAID,iBAAsB,MAApE,UAEAyC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKrC,YAAY,KAAzC,iBACAsC,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKrC,YAAY,QAAzC,kBAEAsC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKlC,SAAS,WAAtC,QACAmC,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKlC,SAAS,YAAtC,SAEAmC,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAK/B,oBAA7B,oBAEAgC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAENF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKnC,YAAY,IAAIL,uBAA4B,CAAClB,MAAO0D,EAAK5D,MAAME,WAA5F,YAEA2D,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKnC,YAAY,IAAIL,uBAA4B,CACjFiD,UAAW,EACXC,UAAW,QAFH,SASAT,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKnC,YAAY,IAAIL,sBAA2B,CAAClB,MAAO0D,EAAK5D,MAAME,MAAOwD,aAAa,EAAMC,QAAS,GAAKY,WAAW,EAAOC,YAAY,EAAOpE,KAAKwD,EAAK5D,MAAMI,UAAxL,eAEAyD,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKjC,QAAQP,gBAArC,gBACAyC,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKjC,QAAQP,eAArC,SACAyC,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKjC,QAAQP,cAArC,QAGAyC,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,UAAQK,QAAU,kBAAMR,EAAKnC,YAAY,IAAIL,uBACzC,CAAClB,MAAO0D,EAAK5D,MAAME,MACfuE,aAAa,EACbC,aAAc,GACdL,UAAW,GACXC,UAAW,GAKflE,KAAKwD,EAAK5D,MAAMI,UAVpB,kBA/RMuE,cCkBHC,UARG,kBAChBf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACc,OAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAD,8BCrBR,IAAA1D,EAA+C2D,EAAQ,KAgBvD3D,EAAA4D,cAAA,SAAAC,EAAAzB,GA6GA,IAEA0B,EAGAC,EACAC,EAEAC,EACAC,EApHA1F,KAAAqF,SAEArF,KAAA4D,gBAAA+B,IAAA/B,IAAAH,SAGAzD,KAAA4F,SAAA,EAGA5F,KAAA6F,OAAA,IAAArE,EAAAsE,QAGA9F,KAAA+F,YAAA,EACA/F,KAAAgG,YAAAC,IAGAjG,KAAAkG,QAAA,EACAlG,KAAAmG,QAAAF,IAIAjG,KAAAoG,cAAA,EACApG,KAAAqG,cAAAC,KAAAC,GAIAvG,KAAAwG,iBAAAP,IACAjG,KAAAyG,gBAAAR,IAIAjG,KAAA0G,eAAA,EACA1G,KAAA2G,cAAA,IAIA3G,KAAA4G,YAAA,EACA5G,KAAA6G,UAAA,EAGA7G,KAAA8G,cAAA,EACA9G,KAAA+G,YAAA,EAGA/G,KAAAgH,WAAA,EACAhH,KAAAiH,SAAA,EACAjH,KAAAkH,oBAAA,EACAlH,KAAAmH,YAAA,EAIAnH,KAAAoH,YAAA,EACApH,KAAAqH,gBAAA,EAGArH,KAAAsH,YAAA,EAGAtH,KAAAuH,KAAA,CAAcC,KAAA,GAAAC,GAAA,GAAAC,MAAA,GAAAC,OAAA,IAGd3H,KAAA4H,aAAA,CAAsBJ,KAAAhG,EAAAqG,MAAAL,KAAAM,OAAAtG,EAAAqG,MAAAC,OAAAJ,MAAAlG,EAAAqG,MAAAH,OAGtB1H,KAAA+H,QAAA/H,KAAA6F,OAAAmC,QACAhI,KAAAiI,UAAAjI,KAAAqF,OAAArC,SAAAgF,QACAhI,KAAAkI,MAAAlI,KAAAqF,OAAA8C,KAMAnI,KAAAoI,cAAA,WAEA,OAAAC,EAAAC,KAIAtI,KAAAuI,kBAAA,WAEA,OAAAF,EAAAG,OAIAxI,KAAAyI,UAAA,WAEAC,EAAAX,QAAAY,KAAAD,EAAA7C,QACA6C,EAAAT,UAAAU,KAAAD,EAAArD,OAAArC,UACA0F,EAAAR,MAAAQ,EAAArD,OAAA8C,MAIAnI,KAAA4I,MAAA,WAEAF,EAAA7C,OAAA8C,KAAAD,EAAAX,SACAW,EAAArD,OAAArC,SAAA2F,KAAAD,EAAAT,WACAS,EAAArD,OAAA8C,KAAAO,EAAAR,MAEAQ,EAAArD,OAAAvC,yBACA4F,EAAAG,cAAAC,GAEAJ,EAAAK,SAEA3I,EAAA4I,EAAAC,MAKAjJ,KAAA+I,QAEAzD,EAAA,IAAA9D,EAAAsE,QAGAP,GAAA,IAAA/D,EAAA0H,YAAAC,mBAAA9D,EAAA+D,GAAA,IAAA5H,EAAAsE,QAAA,QACAN,EAAAD,EAAAyC,QAAAqB,UAEA5D,EAAA,IAAAjE,EAAAsE,QACAJ,EAAA,IAAAlE,EAAA0H,WAEA,WAEA,IAAAlG,EAAA0F,EAAArD,OAAArC,SAkEA,OAhEAsC,EAAAqD,KAAA3F,GAAAsG,IAAAZ,EAAA7C,QAGAP,EAAAiE,gBAAAhE,GAGA8C,EAAAmB,eAAAlE,GAEAoD,EAAAtB,YAAAhH,IAAA4I,EAAAC,MAEAQ,EAmIA,EAAAnD,KAAAC,GAAA,MAAAmC,EAAArB,iBA/HAgB,EAAAG,OAAAkB,EAAAlB,MACAH,EAAAC,KAAAoB,EAAApB,IAGAD,EAAAG,MAAAlC,KAAAqD,IAAAjB,EAAAlC,gBAAAF,KAAAsD,IAAAlB,EAAAjC,gBAAA4B,EAAAG,QAGAH,EAAAC,IAAAhC,KAAAqD,IAAAjB,EAAAtC,cAAAE,KAAAsD,IAAAlB,EAAArC,cAAAgC,EAAAC,MAEAD,EAAAwB,WAGAxB,EAAAyB,QAAAC,EAGA1B,EAAAyB,OAAAxD,KAAAqD,IAAAjB,EAAA3C,YAAAO,KAAAsD,IAAAlB,EAAA1C,YAAAqC,EAAAyB,SAGApB,EAAA7C,OAAA3C,IAAA8G,GAEA1E,EAAA2E,iBAAA5B,GAGA/C,EAAAiE,gBAAA/D,GAEAxC,EAAA2F,KAAAD,EAAA7C,QAAA3C,IAAAoC,GAEAoD,EAAArD,OAAA6E,OAAAxB,EAAA7C,SAEA,IAAA6C,EAAAhC,eAEAgD,EAAAlB,OAAA,EAAAE,EAAA/B,cACA+C,EAAApB,KAAA,EAAAI,EAAA/B,cAEAqD,EAAAG,eAAA,EAAAzB,EAAA/B,iBAIA+C,EAAAzG,IAAA,OAEA+G,EAAA/G,IAAA,QAIA8G,EAAA,KAMAK,GACA3E,EAAA4E,kBAAA3B,EAAArD,OAAArC,UAAAsH,GACA,KAAA5E,EAAA6E,IAAA7B,EAAArD,OAAAmF,aAAAF,KAEA5B,EAAAG,cAAAC,GAEArD,EAAAkD,KAAAD,EAAArD,OAAArC,UACA0C,EAAAiD,KAAAD,EAAArD,OAAAmF,YACAJ,GAAA,GAEA,KAUApK,KAAAyK,QAAA,WAEA/B,EAAA9E,WAAA8G,oBAAA,cAAAC,GAAA,GACAjC,EAAA9E,WAAA8G,oBAAA,YAAAE,GAAA,GACAlC,EAAA9E,WAAA8G,oBAAA,QAAAG,GAAA,GAEAnC,EAAA9E,WAAA8G,oBAAA,aAAAI,GAAA,GACApC,EAAA9E,WAAA8G,oBAAA,WAAAK,GAAA,GACArC,EAAA9E,WAAA8G,oBAAA,YAAAM,GAAA,GAEAvH,SAAAiH,oBAAA,YAAAO,GAAA,GACAxH,SAAAiH,oBAAA,UAAAQ,GAAA,GAEAnK,OAAA2J,oBAAA,UAAAS,GAAA,IAUA,IAAAzC,EAAA1I,KAEA8I,EAAA,CAAoBsC,KAAA,UACpBC,EAAA,CAAmBD,KAAA,SACnBE,EAAA,CAAiBF,KAAA,OAEjBpC,EAAA,CAAcC,MAAA,EAAAsC,OAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,aAAA,EAAAC,gBAAA,GAEdvL,EAAA4I,EAAAC,KAEAqB,EAAA,KAGAjC,EAAA,IAAA7G,EAAAoK,UACAlC,EAAA,IAAAlI,EAAAoK,UAEA7B,EAAA,EACAC,EAAA,IAAAxI,EAAAsE,QACAsE,GAAA,EAEAyB,EAAA,IAAArK,EAAAsK,QACAC,EAAA,IAAAvK,EAAAsK,QACAE,EAAA,IAAAxK,EAAAsK,QAEAG,EAAA,IAAAzK,EAAAsK,QACAI,EAAA,IAAA1K,EAAAsK,QACAK,EAAA,IAAA3K,EAAAsK,QAEAM,EAAA,IAAA5K,EAAAsK,QACAO,EAAA,IAAA7K,EAAAsK,QACAQ,EAAA,IAAA9K,EAAAsK,QAQA,SAAAS,IAEA,OAAAjG,KAAAkG,IAAA,IAAA9D,EAAA7B,WAIA,SAAA4C,EAAAgD,GAEA/C,EAAAlB,OAAAiE,EAIA,SAAAC,EAAAD,GAEA/C,EAAApB,KAAAmE,EAIA,IAEAE,EAFAC,GAEAD,EAAA,IAAAnL,EAAAsE,QAEA,SAAA+G,EAAAC,GAEAH,EAAAI,oBAAAD,EAAA,GACAH,EAAAxC,gBAAA0C,GAEA7C,EAAA9G,IAAAyJ,KAMAK,EAAA,WAEA,IAAAL,EAAA,IAAAnL,EAAAsE,QAEA,gBAAA+G,EAAAC,IAEA,IAAApE,EAAAxB,mBAEAyF,EAAAI,oBAAAD,EAAA,IAIAH,EAAAI,oBAAAD,EAAA,GACAH,EAAAM,aAAAvE,EAAArD,OAAA+D,GAAAuD,IAIAA,EAAAxC,eAAA0C,GAEA7C,EAAA9G,IAAAyJ,IAnBA,GA0BAO,EAAA,WAEA,IAAA5H,EAAA,IAAA9D,EAAAsE,QAEA,gBAAAqH,EAAAC,GAEA,IAAAC,EAAA3E,EAAA9E,aAAAH,SAAAiF,EAAA9E,WAAAF,KAAAgF,EAAA9E,WAEA,GAAA8E,EAAArD,OAAAiI,oBAAA,CAGA,IAAAtK,EAAA0F,EAAArD,OAAArC,SACAsC,EAAAqD,KAAA3F,GAAAsG,IAAAZ,EAAA7C,QACA,IAAA0H,EAAAjI,EAAAkI,SAGAD,GAAAjH,KAAAmH,IAAA/E,EAAArD,OAAAqI,IAAA,EAAApH,KAAAC,GAAA,KAGAqG,EAAA,EAAAO,EAAAI,EAAAF,EAAAM,aAAAjF,EAAArD,OAAAuI,QACAZ,EAAA,EAAAI,EAAAG,EAAAF,EAAAM,aAAAjF,EAAArD,OAAAuI,aAEIlF,EAAArD,OAAAwI,sBAGJjB,EAAAO,GAAAzE,EAAArD,OAAAyI,MAAApF,EAAArD,OAAA0I,MAAArF,EAAArD,OAAA8C,KAAAkF,EAAAW,YAAAtF,EAAArD,OAAAuI,QACAZ,EAAAI,GAAA1E,EAAArD,OAAA4I,IAAAvF,EAAArD,OAAA6I,QAAAxF,EAAArD,OAAA8C,KAAAkF,EAAAM,aAAAjF,EAAArD,OAAAuI,UAKAO,QAAAC,KAAA,gFACA1F,EAAA1B,WAAA,IAhCA,GAwCA,SAAAqH,EAAAC,GAEA5F,EAAArD,OAAAiI,oBAEAvD,GAAAuE,EAEG5F,EAAArD,OAAAwI,sBAEHnF,EAAArD,OAAA8C,KAAA7B,KAAAqD,IAAAjB,EAAAxC,QAAAI,KAAAsD,IAAAlB,EAAAvC,QAAAuC,EAAArD,OAAA8C,KAAAmG,IACA5F,EAAArD,OAAAvC,yBACAsH,GAAA,IAIA+D,QAAAC,KAAA,uFACA1F,EAAA9B,YAAA,GAMA,SAAA2H,EAAAD,GAEA5F,EAAArD,OAAAiI,oBAEAvD,GAAAuE,EAEG5F,EAAArD,OAAAwI,sBAEHnF,EAAArD,OAAA8C,KAAA7B,KAAAqD,IAAAjB,EAAAxC,QAAAI,KAAAsD,IAAAlB,EAAAvC,QAAAuC,EAAArD,OAAA8C,KAAAmG,IACA5F,EAAArD,OAAAvC,yBACAsH,GAAA,IAIA+D,QAAAC,KAAA,uFACA1F,EAAA9B,YAAA,GA0BA,SAAA4H,EAAAC,GAIAxC,EAAAhJ,IAAAwL,EAAAC,QAAAD,EAAAE,SA0OA,SAAA/D,EAAA6D,GAEA,QAAA/F,EAAA9C,QAAA,CAWA,OAPA6I,EAAAG,iBAKAlG,EAAA9E,WAAAiL,MAAAnG,EAAA9E,WAAAiL,QAAA9N,OAAA8N,QAEAJ,EAAAK,QAEA,KAAApG,EAAAd,aAAAJ,KAEA,GAAAiH,EAAAM,SAAAN,EAAAO,SAAAP,EAAAQ,SAAA,CAEA,QAAAvG,EAAA1B,UAAA,OAEAwH,EAAAC,GAEArO,EAAA4I,EAAAyC,QAEK,CAEL,QAAA/C,EAAA5B,aAAA,QAzRA,SAAA2H,GAIA5C,EAAA5I,IAAAwL,EAAAC,QAAAD,EAAAE,SAuRAO,CAAAT,GAEArO,EAAA4I,EAAAuC,OAIA,MAEA,KAAA7C,EAAAd,aAAAE,OAEA,QAAAY,EAAA9B,WAAA,QA7RA,SAAA6H,GAIArC,EAAAnJ,IAAAwL,EAAAC,QAAAD,EAAAE,SA2RAQ,CAAAV,GAEArO,EAAA4I,EAAAwC,MAEA,MAEA,KAAA9C,EAAAd,aAAAF,MAEA,QAAAgB,EAAA1B,UAAA,OAEAwH,EAAAC,GAEArO,EAAA4I,EAAAyC,IAMArL,IAAA4I,EAAAC,OAEAxF,SAAAf,iBAAA,YAAAuI,GAAA,GACAxH,SAAAf,iBAAA,UAAAwI,GAAA,GAEAxC,EAAAG,cAAAwC,KAMA,SAAAJ,EAAAwD,GAEA,QAAA/F,EAAA9C,QAIA,OAFA6I,EAAAG,iBAEAxO,GAEA,KAAA4I,EAAAuC,OAEA,QAAA7C,EAAA5B,aAAA,QAtTA,SAAA2H,GAIA1C,EAAA9I,IAAAwL,EAAAC,QAAAD,EAAAE,SAEA3C,EAAAoD,WAAArD,EAAAF,GAAA1B,eAAAzB,EAAA3B,aAEA,IAAAsG,EAAA3E,EAAA9E,aAAAH,SAAAiF,EAAA9E,WAAAF,KAAAgF,EAAA9E,WAEA6F,EAAA,EAAAnD,KAAAC,GAAAyF,EAAArL,EAAA0M,EAAAM,cAEAjB,EAAA,EAAApG,KAAAC,GAAAyF,EAAApL,EAAAyM,EAAAM,cAEA9B,EAAAlD,KAAAoD,GAEArD,EAAAK,SAwSAsG,CAAAZ,GAEA,MAEA,KAAAzF,EAAAwC,MAEA,QAAA9C,EAAA9B,WAAA,QA1SA,SAAA6H,GAIApC,EAAApJ,IAAAwL,EAAAC,QAAAD,EAAAE,SAEArC,EAAA8C,WAAA/C,EAAAD,GAEAE,EAAA1L,EAAA,EAEAyN,EAAA9B,KAEGD,EAAA1L,EAAA,GAEH2N,EAAAhC,KAIAH,EAAAzD,KAAA0D,GAEA3D,EAAAK,SAwRAuG,CAAAb,GAEA,MAEA,KAAAzF,EAAAyC,IAEA,QAAA/C,EAAA1B,UAAA,QA1RA,SAAAyH,GAIAvC,EAAAjJ,IAAAwL,EAAAC,QAAAD,EAAAE,SAEAxC,EAAAiD,WAAAlD,EAAAD,GAAA9B,eAAAzB,EAAAzB,UAEAiG,EAAAf,EAAAxL,EAAAwL,EAAAvL,GAEAqL,EAAAtD,KAAAuD,GAEAxD,EAAAK,SAgRAwG,CAAAd,IAQA,SAAAvD,EAAAuD,IAEA,IAAA/F,EAAA9C,UAIAnC,SAAAiH,oBAAA,YAAAO,GAAA,GACAxH,SAAAiH,oBAAA,UAAAQ,GAAA,GAEAxC,EAAAG,cAAAyC,GAEAlL,EAAA4I,EAAAC,MAIA,SAAA4B,EAAA4D,IAEA,IAAA/F,EAAA9C,UAAA,IAAA8C,EAAA9B,YAAAxG,IAAA4I,EAAAC,MAAA7I,IAAA4I,EAAAuC,SAEAkD,EAAAG,iBACAH,EAAAe,kBAEA9G,EAAAG,cAAAwC,GApSA,SAAAoD,GAIAA,EAAArB,OAAA,EAEAmB,EAAAhC,KAEGkC,EAAArB,OAAA,GAEHiB,EAAA9B,KAIA7D,EAAAK,SAwRA0G,CAAAhB,GAEA/F,EAAAG,cAAAyC,IAIA,SAAAH,EAAAsD,IAEA,IAAA/F,EAAA9C,UAAA,IAAA8C,EAAApB,aAAA,IAAAoB,EAAA1B,WA5RA,SAAAyH,GAIA,IAAAiB,GAAA,EAEA,OAAAjB,EAAAkB,SAEA,KAAAjH,EAAAnB,KAAAE,GACAyF,EAAA,EAAAxE,EAAAvB,aACAuI,GAAA,EACA,MAEA,KAAAhH,EAAAnB,KAAAI,OACAuF,EAAA,GAAAxE,EAAAvB,aACAuI,GAAA,EACA,MAEA,KAAAhH,EAAAnB,KAAAC,KACA0F,EAAAxE,EAAAvB,YAAA,GACAuI,GAAA,EACA,MAEA,KAAAhH,EAAAnB,KAAAG,MACAwF,GAAAxE,EAAAvB,YAAA,GACAuI,GAAA,EAKAA,IAGAjB,EAAAG,iBAEAlG,EAAAK,UA2PA6G,CAAAnB,GAIA,SAAA3D,EAAA2D,GAEA,QAAA/F,EAAA9C,QAAA,CAIA,OAFA6I,EAAAG,iBAEAH,EAAAoB,QAAArC,QAEA,OAEA,QAAA9E,EAAA5B,aAAA,QAlQA,SAAA2H,GAIA5C,EAAA5I,IAAAwL,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAE,OAgQAC,CAAAvB,GAEArO,EAAA4I,EAAA0C,aAEA,MAEA,OAEA,QAAAhD,EAAA9B,aAAA,IAAA8B,EAAA1B,UAAA,QApQA,SAAAyH,GAIA,GAAA/F,EAAA9B,WAAA,CAEA,IAAAqJ,EAAAxB,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAC,MACAI,EAAAzB,EAAAoB,QAAA,GAAAE,MAAAtB,EAAAoB,QAAA,GAAAE,MAEAlD,EAAAvG,KAAA6J,KAAAF,IAAAC,KAEA9D,EAAAnJ,IAAA,EAAA4J,GAIA,GAAAnE,EAAA1B,UAAA,CAEA,IAAArG,EAAA,IAAA8N,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAC,OACAlP,EAAA,IAAA6N,EAAAoB,QAAA,GAAAE,MAAAtB,EAAAoB,QAAA,GAAAE,OAEA9D,EAAAhJ,IAAAtC,EAAAC,IAkPAwP,CAAA3B,GAEArO,EAAA4I,EAAA2C,gBAEA,MAEA,QAEAvL,EAAA4I,EAAAC,KAIA7I,IAAA4I,EAAAC,MAEAP,EAAAG,cAAAwC,IAMA,SAAAL,EAAAyD,GAEA,QAAA/F,EAAA9C,QAKA,OAHA6I,EAAAG,iBACAH,EAAAe,kBAEAf,EAAAoB,QAAArC,QAEA,OAEA,QAAA9E,EAAA5B,aAAA,OACA,GAAA1G,IAAA4I,EAAA0C,aAAA,QA5QA,SAAA+C,GAIA1C,EAAA9I,IAAAwL,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAE,OAEA/D,EAAAoD,WAAArD,EAAAF,GAAA1B,eAAAzB,EAAA3B,aAEA,IAAAsG,EAAA3E,EAAA9E,aAAAH,SAAAiF,EAAA9E,WAAAF,KAAAgF,EAAA9E,WAEA6F,EAAA,EAAAnD,KAAAC,GAAAyF,EAAArL,EAAA0M,EAAAM,cAEAjB,EAAA,EAAApG,KAAAC,GAAAyF,EAAApL,EAAAyM,EAAAM,cAEA9B,EAAAlD,KAAAoD,GAEArD,EAAAK,SA8PAsH,CAAA5B,GAEA,MAEA,OAEA,QAAA/F,EAAA9B,aAAA,IAAA8B,EAAA1B,UAAA,OACA,GAAA5G,IAAA4I,EAAA2C,gBAAA,QAjQA,SAAA8C,GAIA,GAAA/F,EAAA9B,WAAA,CAEA,IAAAqJ,EAAAxB,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAC,MACAI,EAAAzB,EAAAoB,QAAA,GAAAE,MAAAtB,EAAAoB,QAAA,GAAAE,MAEAlD,EAAAvG,KAAA6J,KAAAF,IAAAC,KAEA7D,EAAApJ,IAAA,EAAA4J,GAEAP,EAAArJ,IAAA,EAAAqD,KAAAkG,IAAAH,EAAAzL,EAAAwL,EAAAxL,EAAA8H,EAAA7B,YAEAwH,EAAA/B,EAAA1L,GAEAwL,EAAAzD,KAAA0D,GAIA,GAAA3D,EAAA1B,UAAA,CAEA,IAAArG,EAAA,IAAA8N,EAAAoB,QAAA,GAAAC,MAAArB,EAAAoB,QAAA,GAAAC,OACAlP,EAAA,IAAA6N,EAAAoB,QAAA,GAAAE,MAAAtB,EAAAoB,QAAA,GAAAE,OAEA7D,EAAAjJ,IAAAtC,EAAAC,GAEAuL,EAAAiD,WAAAlD,EAAAD,GAAA9B,eAAAzB,EAAAzB,UAEAiG,EAAAf,EAAAxL,EAAAwL,EAAAvL,GAEAqL,EAAAtD,KAAAuD,GAIAxD,EAAAK,SA+NAuH,CAAA7B,GAEA,MAEA,QAEArO,EAAA4I,EAAAC,MAMA,SAAA8B,EAAA0D,IAEA,IAAA/F,EAAA9C,UAIA8C,EAAAG,cAAAyC,GAEAlL,EAAA4I,EAAAC,MAIA,SAAA0B,EAAA8D,IAEA,IAAA/F,EAAA9C,SAEA6I,EAAAG,iBAMAlG,EAAA9E,WAAAlB,iBAAA,cAAAiI,GAAA,GAEAjC,EAAA9E,WAAAlB,iBAAA,YAAAkI,GAAA,GACAlC,EAAA9E,WAAAlB,iBAAA,QAAAmI,GAAA,GAEAnC,EAAA9E,WAAAlB,iBAAA,aAAAoI,GAAA,GACApC,EAAA9E,WAAAlB,iBAAA,WAAAqI,GAAA,GACArC,EAAA9E,WAAAlB,iBAAA,YAAAsI,GAAA,GAEAjK,OAAA2B,iBAAA,UAAAyI,GAAA,GAIAnL,KAAA+I,UAIAvH,EAAA4D,cAAAmL,UAAAC,OAAAC,OAAAjP,EAAAkP,gBAAAH,WACA/O,EAAA4D,cAAAmL,UAAAI,YAAAnP,EAAA4D,cAEAoL,OAAAI,iBAAApP,EAAA4D,cAAAmL,UAAA,CAEAM,OAAA,CAEAC,IAAA,WAGA,OADA3C,QAAAC,KAAA,4DACApO,KAAA6F,SAQAkL,OAAA,CAEAD,IAAA,WAGA,OADA3C,QAAAC,KAAA,+EACApO,KAAA4G,YAIA3D,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,8EACApO,KAAA4G,YAAAoK,IAMAC,SAAA,CAEAH,IAAA,WAGA,OADA3C,QAAAC,KAAA,mFACApO,KAAA8G,cAIA7D,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,kFACApO,KAAA8G,cAAAkK,IAMAE,MAAA,CAEAJ,IAAA,WAGA,OADA3C,QAAAC,KAAA,6EACApO,KAAAgH,WAIA/D,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,4EACApO,KAAAgH,WAAAgK,IAMAG,OAAA,CAEAL,IAAA,WAGA,OADA3C,QAAAC,KAAA,+EACApO,KAAAsH,YAIArE,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,8EACApO,KAAAsH,YAAA0J,IAMAI,aAAA,CAEAN,IAAA,WAGA,OADA3C,QAAAC,KAAA,wFACApO,KAAA0G,eAIAzD,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,uFACApO,KAAA0G,eAAAsK,IAMAK,qBAAA,CAEAP,IAAA,WAGA,OADA3C,QAAAC,KAAA,4FACApO,KAAA2G,eAIA1D,IAAA,SAAA+N,GAEA7C,QAAAC,KAAA,4FACApO,KAAA2G,cAAAqK,MAOAM,EAAAC,UAAAC,QAAAhQ,EAAA4D","file":"component---src-pages-index-js-7cbd35394354c45655c8.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nconst OrbitControls = require('three-orbitcontrols')\n\n// import * as OrbitControls from \"three\";\n// const OrbitControls = require('three')\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rotation: 0.005,\n      material: new THREE.MeshStandardMaterial(  ),\n      geometry: new THREE.BoxGeometry( 2, 2, 2 ),\n      color: 0xFFFFFF,\n      side: THREE.DoubleSide,\n      wireframe: false\n    };\n  }\n\n  SetGeometry(geometry) {\n    this.setState({\n        geometry: geometry\n      });    \n  }\n\n\n  SetRotation(float) {\n    this.setState({\n      rotation: float\n    });\n  }\n\n\n  SetMaterial(material) {\n    this.setState({\n      material: material\n    });\n  }\n\n  SetColor(color) {\n    this.setState({\n      color: color\n    });\n  }\n\n\n  SetSide(Side) {\n    this.setState({\n      side: Side\n    });\n  }\n\n\n  ToggleWireFrame() {\n    this.setState({\n      wireframe: !this.state.wireframe\n    });\n  }\n\n\n  componentDidUpdate(prevprops) {\n    if (prevprops.needsupdate !== this.props.needsupdate) { this.StopRotation()}\n  }\n\n\n\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n\n\n   \n\n\n\n    function scene() {    \n      scene = new THREE.Scene();\n      scene.background = new THREE.Color( 0x121213 );  \n      \n      return scene\n    }\n\n\n\n\n    function SetCamera(x,y,z) {\n\n\n      var camera = new THREE.PerspectiveCamera( \n        45, \n        window.innerWidth/window.innerHeight, \n        0.1, \n        1000 );\n\n       camera.position.set( x,y,z);\n\n        return camera\n    }\n\n\n\n\n  \n\n    function renderIt () {\n      var renderer = new THREE.WebGLRenderer({ antialias: true });\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n      \n      renderer.setPixelRatio( window.devicePixelRatio );\n      \n      renderer.gammaFactor = 2.2;\n      renderer.gammaOutput = true;\n\n      renderer.physicallyCorrectLights = true;\n\n      document.body.appendChild( renderer.domElement );\n\n      return renderer\n    }\n\n\n    function onWindowResize() {\n      // set the aspect ratio to match the new browser window aspect ratio\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n    \n      // update the camera's frustum\n      this.camera.updateProjectionMatrix();\n    \n      // update the size of the renderer AND the canvas\n      this.renderer.setSize( window.innerWidth, window.innerHeight );\n      }\n      window.addEventListener( 'resize', onWindowResize );\n\n\n\n    function returnAmbientLights() {\n    \n      const ambientLight = new THREE.HemisphereLight(\n          0xddeeff, // bright sky color\n          0x202020, // dim ground color\n          3, // intensity\n        );\n    \n      return ambientLight\n  \n    }\n\n    \n\n    function returnMainLights() {\n      \n        const mainLight = new THREE.DirectionalLight( 0xffffff, 5 );\n        mainLight.position.set( 10, 10, 10 );\n      \n        return mainLight\n    \n      }\n\n\n      function returnPlane() {\n        var geometry = new THREE.PlaneGeometry( 10, 10, 1 );\n        var material = new THREE.MeshStandardMaterial( \n            {color: 0x1E90FF, \n                side: THREE.DoubleSide, \n                transparent: true, \n                opacity: 0.6, \n                wireframe: false} \n            );\n        var plane = new THREE.Mesh( geometry, material );\n        \n        return plane\n      }\n\n\n    \n\n    this.scene = scene();\n    this.camera = SetCamera(0,-15,5)\n    this.scene.add( returnMainLights(), returnAmbientLights() );\n\n\n\n    this.renderer = renderIt ()\n    var controls = new THREE.OrbitControls( this.camera, this.renderer.domElement );\n\n\n\n    this.cube = new THREE.Mesh( this.state.geometry, this.state.material )\n    this.scene.add( this.cube );\n\n    var plane = returnPlane()\n    this.scene.add(plane)\n    plane.position.set(0,0,-3)\n\n\n\n    this.start()\n\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n\n\n\n\n\nanimate = () => {\n\n    this.cube.geometry = this.state.geometry\n\n    this.cube.material = this.state.material\n    this.cube.material.color.setHex(this.state.color)\n    this.cube.material.side = this.state.side\n    this.cube.material.wireframe = this.state.wireframe\n\n\n      this.cube.rotation.x += this.state.rotation\n      this.cube.rotation.y += this.state.rotation\n\n      this.renderScene()\n      this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n\nstart = () => {\n            if (!this.frameId) {\n                this.frameId = requestAnimationFrame(this.animate)\n            }\n  }\n\n\nstop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\n\n\nrenderScene = () => {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n\n  render() {\n    return (\n      <>\n\n\n      <div style={{position: \"absolute\", color: \"white\", fontSize: \"20px\", padding: \"50px\"}}>\n\n        <p>three.js react app using states</p>\n\n      <button onClick={ () => this.SetGeometry(new THREE.BoxGeometry( 2, 2, 2 ) ) } >Cube</button>\n      <button onClick={ () => this.SetGeometry( new THREE.SphereGeometry( 2 ) ) } >Sphere</button>\n\n      <br /><br />\n\n\n            <button onClick={ () => this.SetRotation(0) } >Stop Rotation</button>\n            <button onClick={ () => this.SetRotation(0.005) } >Start Rotation</button>\n\n            <br />\n            <button onClick={ () => this.SetColor(0x1E90FF) } >Blue</button>\n            <button onClick={ () => this.SetColor(0xFFFFFF) } >White</button>\n\n            <br />\n\n\n            <br />\n            <button onClick={ () => this.ToggleWireFrame() } >toggle wireframe</button>\n\n            <br /><br />\n\n            <button onClick={ () => this.SetMaterial(new THREE.MeshStandardMaterial( {color: this.state.color} ) ) }  >Standard</button>\n\n            <button onClick={ () => this.SetMaterial(new THREE.MeshStandardMaterial( {\n    metalness: 1,   // between 0 and 1\n    roughness: 0.5, // between 0 and 1\n    // envMap: envMap,\n} )   ) }  >Metal</button>\n\n\n            \n\n            <br /><br />\n            <button onClick={ () => this.SetMaterial(new THREE.MeshLambertMaterial( {color: this.state.color, transparent: true, opacity: 0.5, depthTest: false, depthWrite: false, side:this.state.side})) } >Transparent</button>\n\n            <br />\n\n            <button onClick={ () => this.SetSide(THREE.DoubleSide) } >Side: Double</button>\n            <button onClick={ () => this.SetSide(THREE.FrontSide) } >Front</button>\n            <button onClick={ () => this.SetSide(THREE.BackSide) } >Back</button>\n\n\n            <br /><br />\n            <button onClick={ () => this.SetMaterial(new THREE.MeshPhysicalMaterial( \n                {color: this.state.color, \n                    flatShading: true,\n                    reflectivity: 0.8,\n                    metalness: 0.8,\n                    roughness: 0.4,\n                // transparent: true, \n                // opacity: 0.5, \n                // depthTest: false, \n                // depthWrite: false, \n                side:this.state.side})) } >Phyiscal</button>\n\n            \n\n      </div>\n\n\n      </>\n\n    )\n  }\n}\n\n\nexport default App","import React from \"react\"\n\n\n\nimport ThreeJSApp from \"../components/3D/cubeStates\"\n\n\n\n\n\nif (module.hot) {\n  module.hot.accept('../components/3D/cubeStates.js', function() {\n    window.location.reload();\n  })\n}\n\n\n\nconst IndexPage = () => (\n  <>\n    <Layout>\n        <ThreeJSApp />\n    </Layout>\n  </>\n)\n\nexport default IndexPage\n\n\n\n\n","/* three-orbitcontrols addendum */ var THREE = require('three');\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new THREE.Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.25;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new THREE.Vector3();\n\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\t\t\tscope.target.add( panOffset );\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new THREE.Spherical();\n\tvar sphericalDelta = new THREE.Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new THREE.Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new THREE.Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new THREE.Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\t//console.log( 'handleMouseDownRotate' );\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\t//console.log( 'handleMouseDownDolly' );\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\t//console.log( 'handleMouseDownPan' );\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\t//console.log( 'handleMouseMoveRotate' );\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\t//console.log( 'handleMouseMoveDolly' );\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\t//console.log( 'handleMouseMovePan' );\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( event ) {\n\n\t\t// console.log( 'handleMouseUp' );\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\t// console.log( 'handleMouseWheel' );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\t// console.log( 'handleKeyDown' );\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\t//console.log( 'handleTouchStartRotate' );\n\n\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchStartDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\t//console.log( 'handleTouchMoveRotate' );\n\n\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t//console.log( 'handleTouchMoveDollyPan' );\n\n\t\tif ( scope.enableZoom ) {\n\n\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyIn( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tif ( scope.enablePan ) {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleTouchEnd( event ) {\n\n\t\t//console.log( 'handleTouchEnd' );\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase scope.mouseButtons.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.MIDDLE:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase scope.mouseButtons.RIGHT:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly-pan\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY_PAN ) return; // is this needed?\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n\tcenter: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n\t\t\treturn this.target;\n\n\t\t}\n\n\t},\n\n\t// backward compatibility\n\n\tnoZoom: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\treturn ! this.enableZoom;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\tthis.enableZoom = ! value;\n\n\t\t}\n\n\t},\n\n\tnoRotate: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\treturn ! this.enableRotate;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\tthis.enableRotate = ! value;\n\n\t\t}\n\n\t},\n\n\tnoPan: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\treturn ! this.enablePan;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\tthis.enablePan = ! value;\n\n\t\t}\n\n\t},\n\n\tnoKeys: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\treturn ! this.enableKeys;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\tthis.enableKeys = ! value;\n\n\t\t}\n\n\t},\n\n\tstaticMoving: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\treturn ! this.enableDamping;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\tthis.enableDamping = ! value;\n\n\t\t}\n\n\t},\n\n\tdynamicDampingFactor: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\treturn this.dampingFactor;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\tthis.dampingFactor = value;\n\n\t\t}\n\n\t}\n\n} );\n/* three-orbitcontrols addendum */ module.exports = exports.default = THREE.OrbitControls;\n"],"sourceRoot":""}