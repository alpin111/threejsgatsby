{"version":3,"sources":["webpack:///./src/components/3D/cube.js","webpack:///./src/pages/index.js"],"names":["App","componentDidMount","scene","THREE","background","window","addEventListener","camera","aspect","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","x","y","z","geometry","material","ambientLight","mainLight","position","set","cube","color","add","antialias","setPixelRatio","devicePixelRatio","gammaFactor","gammaOutput","physicallyCorrectLights","document","body","appendChild","domElement","renderIt","object","animate","requestAnimationFrame","rotation","render","react_default","a","createElement","Component","IndexPage","Fragment","_3D_cube"],"mappings":"8IA4IeA,oGAtIbC,kBAAA,WAQE,SAASC,KACPA,EAAQ,IAAIC,KACNC,WAAa,IAAID,IAAa,SA0EpCE,OAAOC,iBAAkB,SAV3B,WAEEC,EAAOC,OAASH,OAAOI,WAAaJ,OAAOK,YAG3CH,EAAOI,yBAGPC,EAASC,QAASR,OAAOI,WAAYJ,OAAOK,eA2B9CR,IACA,IAjFmBY,EAAEC,EAAEC,EAZjBC,EACAC,EAyEEC,EAMAC,EAaJb,GAjFeO,EAiFI,EAjFFC,EAiFI,EAjFFC,EAiFI,IA9EzBT,EAAS,IAAIJ,IACX,GACAE,OAAOI,WAAWJ,OAAOK,YACzB,GACA,MAEMW,SAASC,IAAKR,EAAEC,EAAEC,GAEjBT,GAuEPgB,GA9FEN,EAAW,IAAId,IAAmB,EAAG,EAAG,GACxCe,EAAW,IAAIf,IAA4B,CAAEqB,MAAO,WAC7C,IAAIrB,IAAYc,EAAUC,IA6FvChB,EAAMuB,IAAKF,GArBHJ,EAAe,IAAIhB,IACrB,SACA,QACA,IAGEiB,EAAY,IAAIjB,IAAwB,SAAU,IAC9CkB,SAASC,IAAK,GAAI,GAAI,IAEhCpB,EAAMuB,IAAKN,EAAcC,GAkB3B,IAAIR,EA/DJ,WACE,IAAIA,EAAW,IAAIT,IAAoB,CAAEuB,WAAW,IAcpD,OAZAd,EAASC,QAASR,OAAOI,WAAYJ,OAAOK,aAG5CE,EAASe,cAAetB,OAAOuB,kBAE/BhB,EAASiB,YAAc,IACvBjB,EAASkB,aAAc,EAEvBlB,EAASmB,yBAA0B,EAEnCC,SAASC,KAAKC,YAAatB,EAASuB,YAE7BvB,EAgDMwB,GAEXC,EAASd,GA3Eb,SAASe,IACPC,sBAAuBD,GACvBD,EAAOG,SAAS1B,GAAK,KACrBuB,EAAOG,SAASzB,GAAK,KACrBsB,EAAOG,SAASxB,GAAK,KAErBJ,EAAS6B,OAAQvC,EAAOK,GAsE1B+B,MAIFG,OAAA,WACE,OACEC,EAAAC,EAAAC,cAAA,gBAhIYC,aCkBHC,UARG,kBAChBJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACI,EAAD","file":"component---src-pages-index-js-27b821ead67460aca0de.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    // === THREE.JS CODE START ===\n\n\n   \n\n\n\n    function scene() {    \n      scene = new THREE.Scene();\n      scene.background = new THREE.Color( 0x121213 );  \n      \n    }\n\n\n    function AddMesh() {\n\n      var geometry = new THREE.BoxGeometry( 2, 2, 2 );\n      var material = new THREE.MeshStandardMaterial( { color: 0xB0C4DE } );\n      var cube = new THREE.Mesh( geometry, material );\n  \n      return cube\n    }\n\n\n\n\n\n\n    function SetCamera(x,y,z) {\n\n\n      camera = new THREE.PerspectiveCamera( \n        75, \n        window.innerWidth/window.innerHeight, \n        0.1, \n        1000 );\n\n       camera.position.set( x,y,z);\n\n        return camera\n    }\n\n\n\n    function animate () {\n      requestAnimationFrame( animate );\n      object.rotation.x += 0.006;\n      object.rotation.y += 0.006;\n      object.rotation.z += 0.006;\n\n      renderer.render( scene, camera );\n    };\n  \n\n    function renderIt () {\n      var renderer = new THREE.WebGLRenderer({ antialias: true });\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n      \n      renderer.setPixelRatio( window.devicePixelRatio );\n      \n      renderer.gammaFactor = 2.2;\n      renderer.gammaOutput = true;\n\n      renderer.physicallyCorrectLights = true;\n\n      document.body.appendChild( renderer.domElement );\n\n      return renderer\n    }\n\n\n    function onWindowResize() {\n      // set the aspect ratio to match the new browser window aspect ratio\n      camera.aspect = window.innerWidth / window.innerHeight;\n    \n      // update the camera's frustum\n      camera.updateProjectionMatrix();\n    \n      // update the size of the renderer AND the canvas\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      }\n      window.addEventListener( 'resize', onWindowResize );\n\n\n\n    function createLights() {\n      \n    \n      const ambientLight = new THREE.HemisphereLight(\n          0xddeeff, // bright sky color\n          0x202020, // dim ground color\n          3, // intensity\n        );\n    \n      const mainLight = new THREE.DirectionalLight( 0xffffff, 2 );\n      mainLight.position.set( 10, 10, 10 );\n    \n      scene.add( ambientLight, mainLight );\n  \n    }\n\n    \n\n\n    \n\n    scene();\n    var camera = SetCamera(0,0,45)\n    var cube = AddMesh();\n    scene.add( cube );\n\n\n\n    createLights()\n\n    var renderer = renderIt ()\n\n    var object = cube;\n    animate();\n    // === THREE.JS EXAMPLE CODE END ===\n  }\n\n  render() {\n    return (\n      <div />\n\n    )\n  }\n}\n\n\nexport default App","import React from \"react\"\n\n\nimport ThreeJSApp from \"../components/3D/cube\"\n\n\n\nif (module.hot) {\n  module.hot.accept('../components/3D/0.js', function() {\n    window.location.reload();\n  })\n}\n\n\n\nconst IndexPage = () => (\n  <>\n    <p>hello</p>\n    <ThreeJSApp />\n\n  </>\n)\n\nexport default IndexPage\n\n\n\n\n"],"sourceRoot":""}